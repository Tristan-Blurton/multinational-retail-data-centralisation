import pandas as pd
import numpy as np


class DataCleaning:
    # A class used to clean data from different sources.

    def clean_user_data(self, user_df):
        # A method to clean the user data from the RDS database provided.
        # Remove double index:
        user_df.set_index("index", inplace=True)
        # Converting all column types based on pandas defaults:
        user_df = user_df.convert_dtypes()
        # Converting 'date_of_birth' and 'join_date' to datetime format:
        user_df.date_of_birth = pd.to_datetime(user_df.date_of_birth,
                                               format="mixed",
                                               errors="coerce")
        user_df.join_date = pd.to_datetime(user_df.join_date,
                                           format="mixed",
                                           errors="coerce")
        # Dropping rows with null values both previously existing 
        # and those generated by to_datetime() where no date format was found:
        user_df.dropna(inplace=True)
        # Replacing mistyped country code from 'GGB' to 'GB':
        user_df["country_code"].replace({"GGB":"GB"}, inplace=True)
        # Filtering out rows with user age outside of reasonable range 
        # (there aren't any removed in this case). 
        # 'min_user_age' and 'max_user_age' can be adjusted as desired:
        now = pd.Timestamp.now()
        min_user_age = np.timedelta64(16, "Y")
        max_user_age = np.timedelta64(120, "Y")
        user_df = user_df[(user_df.date_of_birth + min_user_age < now) 
                              | (user_df.date_of_birth + max_user_age > now)]
        # Filtering out rows where 'join_date' is in the future or 'join_date' 
        # is earlier than 'date_of_birth'.
        user_df = user_df[(user_df.join_date < now)
                              & (user_df.join_date > user_df.date_of_birth)]
        # Filtering out rows where 'user_uuid' is in an incorrect format
        # (there are none in this case).
        user_df = user_df[user_df.user_uuid.str.match(
                          "^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$")]
        return user_df